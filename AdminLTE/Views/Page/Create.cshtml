@model Verita.Domain.Entities.Page
@{
    ViewData["Title"] = "Create Page";
}

<h1>Create Product</h1>

@using (Html.BeginForm("Create", "Page", FormMethod.Post, new { enctype = "multipart/form-data", id = "pageForm" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.PageCategory, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PageCategory, new SelectList(Enum.GetValues(typeof(Verita.Common.Enums.PageCategory))), "Select Category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PageCategory, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SortOrder)
                @Html.TextBoxFor(model => model.SortOrder, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BackgroundUrl, htmlAttributes: new { @class = "control-label" })
                <input type="file" name="BackgroundImage" class="form-control-file" />
                @Html.ValidationMessageFor(model => model.BackgroundUrl, "", new { @class = "text-danger" })
            </div> 

            <div class="form-group">
                @Html.LabelFor(model => model.LanguageId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.LanguageId, new SelectList(Enum.GetValues(typeof(Verita.Common.Enums.Language))), "Select Language", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div id="pageImages">  
            </div>

            <button type="button" class="btn btn-success" id="addPageImage">Add Page Image</button>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var productCardIndex = 0;

            $("#addPageImage").click(function () {
                var productCardHtml = `
                                                    <div class="product-card">
                                                        <div class="form-group">
                                                            <label>Image:</label>
                                                                    <input type="file" name="PageImages[${productCardIndex}].Image" class="form-control-file" onchange="previewPageImage(event, this)" />
                                                        </div>
                                                    </div>
                                                `;

                $("#pageImages").append(productCardHtml);
                productCardIndex++;
            });
        });
    </script>
}
