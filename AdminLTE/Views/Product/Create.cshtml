@model Verita.Domain.Entities.Product
@{
    ViewData["Title"] = "Create Product";
}

<h1>Create Product</h1>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data", id = "productForm" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SortOrder)
                @Html.TextBoxFor(model => model.SortOrder, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MainImageUrl, htmlAttributes: new { @class = "control-label" })
                <input type="file" name="MainImage" class="form-control-file" />
                @Html.ValidationMessageFor(model => model.MainImageUrl, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BackgroundImageUrl, htmlAttributes: new { @class = "control-label" })
                <input type="file" name="BackgroundImage" class="form-control-file" />
                @Html.ValidationMessageFor(model => model.BackgroundImageUrl, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "Id", "Name"), "Select Category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LanguageId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.LanguageId, new SelectList(Enum.GetValues(typeof(Verita.Common.Enums.Language))), "Select Language", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div id="productCards">
                <!-- Burada dinamik olarak eklenen ürün kartları olacak -->
            </div>

            <button type="button" class="btn btn-success" id="addProductCard">Add Product Card</button>
        </div>


        <div class="col-md-6">
            <div id="productOrderItems">
                <!-- Burada dinamik olarak eklenen ürün kartları olacak -->
            </div>

            <button type="button" class="btn btn-success" id="addProductOrderItem">Add Product Order Items</button>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var productCardIndex = 0;

            $("#addProductCard").click(function () {
                var productCardHtml = `
                                    <div class="product-card">
                                        <div class="form-group">
                                            <label>Title:</label>
                                            <input type="text" name="ProductCards[${productCardIndex}].Title" class="form-control" />
                                        </div>
                                        <div class="form-group">
                                            <label>Description:</label>
                                            <textarea name="ProductCards[${productCardIndex}].Description" class="form-control"></textarea>
                                        </div>
                                        <div class="form-group">
                                            <label>Image:</label>
                                            <input type="file" name="ProductCards[${productCardIndex}].Image" class="form-control-file" />
                                        </div>
                                    </div>
                                `;

                $("#productCards").append(productCardHtml);
                productCardIndex++;
            });



            var productOrderItemIndex = 0;

            $("#addProductOrderItem").click(function () {
                var productOrderItemHtml = `
                                            <div class="product-card">
                                                <div class="form-group">
                                                    <label>Title:</label>
                                                                    <input type="text" name="ProductOrderItems[${productOrderItemIndex}].Title" class="form-control" />
                                                </div>
                                                <div class="form-group">
                                                    <label>Description:</label>
                                                                    <textarea name="ProductOrderItems[${productOrderItemIndex}].Url" class="form-control"></textarea>
                                                </div>
                                                <div class="form-group">
                                                    <label>Image:</label>
                                                                    <input type="file" name="ProductOrderItems[${productOrderItemIndex}].Image" class="form-control-file" />
                                                </div>
                                            </div>
                                        `;

                $("#productOrderItems").append(productOrderItemHtml);
                productOrderItemIndex++;
            });
        });
    </script>
}
